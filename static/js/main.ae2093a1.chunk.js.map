{"version":3,"sources":["containers/Home.tsx","services/store/actionTypes.ts","services/store/selectors.ts","containers/Category.tsx","services/store/actions.ts","containers/Stats.tsx","App.tsx","services/store/reducers/CatSwipe.ts","services/store/reducers/index.ts","services/store/store.ts","serviceWorker.ts","index.tsx"],"names":["ContainerHome","useState","categories","setCategories","loading","setLoading","error","setError","useEffect","fetch","then","response","json","a","Promise","all","map","category","id","image","categoriesWithImage","catch","err","console","log","className","to","style","backgroundImage","url","name","String","CATS_LOAD","CATS_CLEAR","CAT_PET","CAT_NO_PET","CAT_SKIP","selectCatSwipes","store","catSwipe","ContainerCategory","dispatch","useDispatch","history","useHistory","categoryId","useParams","catSwipes","useSelector","catSwipeIndex","setCatSwipeIndex","setCategory","type","find","cats","payload","handleNext","length","push","cat","onClick","src","alt","ContainerStats","countPet","filter","status","countNoPet","countSkip","App","path","initialState","combineReducers","state","action","undefined","findIndex","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ae2093a1.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Category } from \"../services/Types\";\nimport './Home.scss';\n\nexport default function ContainerHome() {\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    fetch(\"https://api.thecatapi.com/v1/categories\")\n    .then(response => response.json())\n    .then(async (categories: Category[]) => {\n      const categoriesWithImage = await Promise.all(\n        categories.map(category => {\n          return fetch(`https://api.thecatapi.com/v1/images/search?limit=1&category_ids=${category.id}`)\n          .then(response => response.json())\n          .then(async (response) => {\n            return {\n              ...category,\n              image: response[0],\n            }\n          });\n        })\n      );\n\n      await setCategories(categoriesWithImage);\n      await setLoading(false);\n    })\n    .catch(async (err) => {\n      console.log(err);\n      await setError(true);\n      await setLoading(false);\n    })\n  }, []);\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>\n  }\n\n  if (error) {\n    return <div className=\"error\">Error while loading categories. Please try again later!</div>\n  }\n\n  return (\n    <>\n      <div className=\"page-home\">\n        <p>Select a category</p>\n        <div className=\"category-list\">\n          {categories.map(category => (\n            <Link\n              to={`/category/${category.id}`}\n              key={String(category.id)}\n              style={{\n                backgroundImage: `url(\"${category.image?.url}\")`\n              }}\n            >\n              <span>{category.name}</span>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n","export const CATS_LOAD = 'CATS_LOAD';\nexport const CATS_CLEAR = 'CATS_CLEAR';\nexport const CAT_PET = 'CAT_PET';\nexport const CAT_NO_PET = 'CAT_NO_PET';\nexport const CAT_SKIP = 'CAT_SKIP';\n","import { RootState } from './store';\n\nexport const selectCatSwipes = (store: RootState) => {\n  return store.catSwipe;\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Cat, Category } from \"../services/Types\";\nimport { catNoPet, catPet, catsClear, catSkip, catsLoad } from \"../services/store/actions\";\nimport { selectCatSwipes } from \"../services/store/selectors\";\nimport './Category.scss';\n\ninterface CategoryParams {\n  categoryId?: string;\n}\n\nexport default function ContainerCategory() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const {categoryId} = useParams<CategoryParams>();\n\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const catSwipes = useSelector(selectCatSwipes);\n  const [catSwipeIndex, setCatSwipeIndex] = useState(0);\n  const [category, setCategory] = useState<Category>();\n\n  useEffect(() => {\n    dispatch(catsClear());\n\n    fetch(\"https://api.thecatapi.com/v1/categories\")\n    .then(response => response.json())\n    .then(async (categories: Category[]) => {\n      await setCategory(categories.find(category => String(category.id) === String(categoryId)));\n    })\n    .catch(async (err) => {\n      await setError(true);\n    })\n\n    fetch(`https://api.thecatapi.com/v1/images/search?limit=10&category_ids=${categoryId}`)\n    .then(response => response.json())\n    .then(async (cats: Cat[]) => {\n      dispatch(catsLoad(cats));\n      await setLoading(false);\n    })\n    .catch(async (err) => {\n      console.log(err);\n      await setError(true);\n      await setLoading(false);\n    })\n  }, [categoryId]);\n\n  const handleNext = () => {\n    if (catSwipeIndex === catSwipes.length - 1) {\n      history.push(`/stats/${categoryId}`);\n    } else {\n      setCatSwipeIndex(catSwipeIndex + 1);\n    }\n  }\n\n  const handlePet = () => {\n    dispatch(catPet(catSwipes[catSwipeIndex].cat.id));\n    handleNext();\n  }\n\n  const handleSkip = () => {\n    dispatch(catSkip(catSwipes[catSwipeIndex].cat.id));\n    handleNext();\n  }\n\n  const handleNoPet = () => {\n    dispatch(catNoPet(catSwipes[catSwipeIndex].cat.id));\n    handleNext();\n  }\n\n  if (!categoryId) {\n    return <div className=\"error\">Not Found</div>\n  }\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>\n  }\n\n  if (error) {\n    return <div className=\"error\">Error while loading cats. Please try again later!</div>\n  }\n\n  return (\n    <>\n      <div className=\"page-category\">\n        {category ? (\n          <div className=\"category-title\">&gt; {category.name}</div>\n        ) : null}\n\n        <p>Would you pet it? </p>\n        <div className=\"cat\">\n          <div\n            className=\"cat-image\"\n            style={{\n              backgroundImage: `url(\"${catSwipes[catSwipeIndex].cat.url}\")`\n            }}\n          />\n          <div className=\"cat-process\">\n            {catSwipeIndex + 1} of {catSwipes.length}\n          </div>\n          <div className=\"cat-action\">\n            <button\n              onClick={handleNoPet}\n              className=\"cat-action-pet-no\"\n            >\n              <img\n                src=\"/img/action/DontPet.svg\"\n                alt=\"\"\n              />\n              <span>Don't pet it!</span>\n            </button>\n            <button\n              onClick={handleSkip}\n              className=\"cat-action-skip\"\n            >\n              <img\n                src=\"/img/action/Skip.svg\"\n                alt=\"\"\n              />\n              <span>Skip it!</span>\n            </button>\n            <button\n              onClick={handlePet}\n              className=\"cat-action-pet\"\n            >\n              <img\n                src=\"/img/action/Pet.svg\"\n                alt=\"\"\n              />\n              <span>Pet it!</span>\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { Cat } from '../Types';\nimport {\n  CATS_LOAD,\n  CATS_CLEAR,\n  CAT_PET,\n  CAT_NO_PET,\n  CAT_SKIP,\n} from './actionTypes';\n\nexport const catsLoad = (payload: Cat[]) => ({\n  type: CATS_LOAD,\n  payload,\n});\n\nexport const catsClear = () => ({\n  type: CATS_CLEAR,\n});\n\nexport const catPet = (id: string) => ({\n  type: CAT_PET,\n  payload: {id},\n});\n\nexport const catNoPet = (id: string) => ({\n  type: CAT_NO_PET,\n  payload: {id},\n});\n\nexport const catSkip = (id: string) => ({\n  type: CAT_SKIP,\n  payload: {id},\n});\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { selectCatSwipes } from \"../services/store/selectors\";\nimport './Stats.scss';\n\ninterface StatsParams {\n  categoryId?: string;\n}\n\nexport default function ContainerStats() {\n  const {categoryId} = useParams<StatsParams>();\n\n  const catSwipes = useSelector(selectCatSwipes);\n\n  const countPet = catSwipes.filter(catSwipe => catSwipe.status === true).length;\n  const countNoPet = catSwipes.filter(catSwipe => catSwipe.status === false).length;\n  const countSkip = catSwipes.filter(catSwipe => catSwipe.status === null).length;\n\n  return (\n    <>\n      <div className=\"page-stats\">\n        <div className=\"stats-title\">&gt; Stats</div>\n\n        <p>Cats seen: {catSwipes.length}</p>\n\n        <div className=\"stats\">\n          <div className=\"stat-no-pet\">\n            <div className=\"stat-image\">\n              <img\n                src=\"/img/action/DontPet.svg\"\n                alt=\"\"\n              />\n            </div>\n            <div className=\"stat-detail\">\n              <strong>{countNoPet}</strong>\n              <span>Cats you didn't pet</span>\n            </div>\n          </div>\n          <div className=\"stat-skip\">\n            <div className=\"stat-image\">\n              <img\n                src=\"/img/action/Skip.svg\"\n                alt=\"\"\n              />\n            </div>\n            <div className=\"stat-detail\">\n              <strong>{countSkip}</strong>\n              <span>Cats you skipped</span>\n            </div>\n          </div>\n          <div className=\"stat-pet\">\n            <div className=\"stat-image\">\n              <img\n                src=\"/img/action/Pet.svg\"\n                alt=\"\"\n              />\n            </div>\n            <div className=\"stat-detail\">\n              <strong>{countPet}</strong>\n              <span>Cats you pet</span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"stats-action\">\n          <Link to={`/category/${categoryId}`}>Restart In Same Category</Link>\n          <Link to=\"/\">Select New Category</Link>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport Home from './containers/Home';\nimport Category from './containers/Category';\nimport Stats from './containers/Stats';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <header>\n        <Link to=\"/\">\n          <img\n            src=\"/img/logo/Logo.svg\"\n            alt=\"Pet\"\n          />\n        </Link>\n      </header>\n      <main>\n        <Switch>\n          <Route path=\"/stats/:categoryId(\\d+)\">\n            <Stats />\n          </Route>\n          <Route path=\"/category/:categoryId(\\d+)\">\n            <Category />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","import { Action, Cat, CatSwipe } from '../../Types';\nimport { CAT_NO_PET, CAT_PET, CAT_SKIP, CATS_CLEAR, CATS_LOAD } from \"../actionTypes\";\n\nconst initialState: CatSwipe[] = [];\n\nexport default function reducer(state = initialState, action: Action) {\n  let catSwipes;\n  let catSwipeIndex;\n\n  switch (action.type) {\n    case CATS_CLEAR:\n      return [];\n    case CATS_LOAD:\n      return [...action.payload.map((cat: Cat) => {\n        return {\n          cat,\n          status: undefined,\n        }\n      })];\n    case CAT_PET:\n      catSwipes = [...state];\n      catSwipeIndex = catSwipes.findIndex(catSwipe => catSwipe.cat.id === action.payload.id);\n      catSwipes[catSwipeIndex].status = true;\n      return catSwipes;\n    case CAT_SKIP:\n      catSwipes = [...state];\n      catSwipeIndex = catSwipes.findIndex(catSwipe => catSwipe.cat.id === action.payload.id);\n      catSwipes[catSwipeIndex].status = null;\n      return catSwipes;\n    case CAT_NO_PET:\n      catSwipes = [...state];\n      catSwipeIndex = catSwipes.findIndex(catSwipe => catSwipe.cat.id === action.payload.id);\n      catSwipes[catSwipeIndex].status = false;\n      return catSwipes;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport catSwipe from './CatSwipe';\n\nexport default combineReducers({\n  catSwipe,\n});\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nexport const store = createStore(\n  rootReducer,\n  // @ts-ignore\n  // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './services/store/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}